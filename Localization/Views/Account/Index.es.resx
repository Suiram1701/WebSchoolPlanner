<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Title" xml:space="preserve">
    <value>Cuenta</value>
  </data>
  <data name="general" xml:space="preserve">
    <value>Generalmente</value>
  </data>
  <data name="security" xml:space="preserve">
    <value>Seguridad</value>
  </data>
  <data name="MFA" xml:space="preserve">
    <value>Autenticación de dos factores</value>
  </data>
  <data name="MFA_Description" xml:space="preserve">
    <value>La autenticación de dos factores (2FA) aumenta la seguridad de su cuenta porque requiere un código dependiente del tiempo además de la contraseña. Este código, que sólo tiene una validez breve, se proporciona mediante una aplicación de autenticación o por correo electrónico.</value>
  </data>
  <data name="MFA_App" xml:space="preserve">
    <value>Aplicación de autenticación</value>
  </data>
  <data name="Activate" xml:space="preserve">
    <value>Activar</value>
  </data>
  <data name="Deactivate" xml:space="preserve">
    <value>Desactivar</value>
  </data>
  <data name="MFA_Forget" xml:space="preserve">
    <value>Olvídate de este navegador</value>
  </data>
  <data name="MFA_Forget_Tooltip" xml:space="preserve">
    <value>Este navegador está actualmente guardado para inicios de sesión 2FA</value>
  </data>
  <data name="MFA_Recovery" xml:space="preserve">
    <value>Recuperación de dos factores</value>
  </data>
  <data name="MFA_Recovery_Remove" xml:space="preserve">
    <value>Eliminar códigos de recuperación</value>
  </data>
  <data name="MFA_Recovery_CreateNew" xml:space="preserve">
    <value>Generar códigos de recuperación</value>
  </data>
  <data name="MFA_Recovery_Count" xml:space="preserve">
    <value>Actualmente hay {0} códigos de recuperación válidos.</value>
  </data>
  <data name="MFA_Recovery_CreateNew_Tooltip" xml:space="preserve">
    <value>Esta acción invalidará todos los códigos actuales</value>
  </data>
  <data name="MFA_Recovery_Description" xml:space="preserve">
    <value>Los códigos de recuperación 2FA son contraseñas de respaldo de un solo uso para la autenticación 2FA. Si se pierde el segundo factor normal, ofrecen acceso alternativo a la cuenta.</value>
  </data>
  <data name="MFA_App_Description" xml:space="preserve">
    <value>Una aplicación de autenticación 2FA brinda acceso rápido al segundo factor de la autenticación 2FA. La aplicación genera un código cada {0} que se puede utilizar para la autenticación 2FA.</value>
  </data>
  <data name="MFA_Email_Description" xml:space="preserve">
    <value>La autenticación de correo electrónico 2FA le ofrece seguridad adicional a través de un código enviado al correo electrónico registrado. Este código es {0} válido y se puede utilizar una vez.</value>
  </data>
  <data name="MFA_Email" xml:space="preserve">
    <value>Verificacion de Email</value>
  </data>
</root>